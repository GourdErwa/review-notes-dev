(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{333:function(s,a,t){"use strict";t.r(a);var n=t(0),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("专栏原创出处："),t("a",{attrs:{href:"https://github.com/GourdErwa/review-notes/tree/master/language/java-core",target:"_blank",rel:"noopener noreferrer"}},[s._v("github-源笔记文件 "),t("OutboundLink")],1),s._v(" ，"),t("a",{attrs:{href:"https://github.com/GourdErwa/java-advanced/tree/master/java-core",target:"_blank",rel:"noopener noreferrer"}},[s._v("github-源码 "),t("OutboundLink")],1),s._v("，欢迎 Star，转载请附上原文出处链接和本声明。")])]),s._v(" "),t("p",[s._v("Java 核心知识专栏系列笔记，系统性学习可访问个人复盘笔记-技术博客 "),t("a",{attrs:{href:"https://review-notes.top/language/java-core/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java 核心知识 "),t("OutboundLink")],1)]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#一、关于值传递引用传递的结论"}},[s._v("一、关于值传递引用传递的结论")])]),t("li",[t("a",{attrs:{href:"#二、引用类型作为方法参数"}},[s._v("二、引用类型作为方法参数")])]),t("li",[t("a",{attrs:{href:"#三、基础数据类型作为方法参数"}},[s._v("三、基础数据类型作为方法参数")])]),t("li",[t("a",{attrs:{href:"#总结"}},[s._v("总结")])]),t("li",[t("a",{attrs:{href:"#专栏更多文章笔记"}},[s._v("专栏更多文章笔记")])])])]),t("p"),s._v(" "),t("h2",{attrs:{id:"一、关于值传递引用传递的结论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、关于值传递引用传递的结论"}},[s._v("#")]),s._v(" 一、关于值传递引用传递的结论")]),s._v(" "),t("p",[s._v("全网流传的绝大多数文章都是在研究值传递引用传递的过程。并且一致认为是值传递，但是证明的过程没有充分的理由。")]),s._v(" "),t("p",[s._v("虽然最终大部分人“证明”是值传递，那么为什么是值传递，值是什么？怎么传递的？修改了这个值为什么不会改变传入方法的参数？")]),s._v(" "),t("p",[t("strong",[s._v("先下结论")])]),s._v(" "),t("p",[s._v("在此总结一下个人的理解，后续以字节码的分析进行说明。")]),s._v(" "),t("p",[s._v("———— 所谓的传递是"),t("strong",[s._v("拷贝了")]),s._v("引用地址或者基本数据类型的值到栈帧的局部变量表中")]),s._v(" "),t("ul",[t("li",[s._v("如果方法中没有重新赋值操作，一直操作的是方法参数的数据。")]),s._v(" "),t("li",[s._v("如果进行了重新赋值操作 ("),t("code",[s._v("参数名称 = 新的数据")]),s._v(")，相当于把拷贝在局部变量表内的数据更新了。")])]),s._v(" "),t("blockquote",[t("p",[s._v("该部分研究需要虚拟机相关知识，尤其是栈帧，方法的调用过程，字节码指令。")]),s._v(" "),t("p",[s._v("相关知识可以从 "),t("a",{attrs:{href:"https://blog.csdn.net/xiaohulunb/article/details/103828570",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java JVM（JDK13）-专栏文章目录汇总 "),t("OutboundLink")],1),s._v(" 了解。")])]),s._v(" "),t("p",[t("strong",[s._v("局部变量表简介")])]),s._v(" "),t("p",[s._v("方法执行时，传入的方法参数与方法内部创建的变量都保存在栈帧的局部变量表中，每个槽位保存一个变量，对应的名字是惟一的。")]),s._v(" "),t("p",[s._v("因为类方法隐式的会传入一个 this 引用到方法中，所以槽位顺序一般是")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("第 0 个槽位：隐式传入的 this 对象引用\n第 1 个槽位：方法的第 1 个参数\n第 2 个槽位：方法的第 2 个参数\n第 3 个槽位：方法的第 3 个参数\n第 N 个槽位：方法的第 n 个参数\n\n第 N+1 个槽位：方法内部声明的第 1 个变量\n第 N+2 个槽位：方法内部声明的第 2 个变量\n第 N+3 个槽位：方法内部声明的第 3 个变量\n...\n")])])]),t("p",[s._v("举个例子：我们的方法如下")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("refUpdate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" 槽位 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v("，槽位 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("o 的引用地址\n   o "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          重新赋值，名称为 o ，直接覆盖槽位 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 的引用地址\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" hashCode "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 后续我们操作的都是新创建的对象引用，方法传入的 o 无法使用了\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h2",{attrs:{id:"二、引用类型作为方法参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、引用类型作为方法参数"}},[s._v("#")]),s._v(" 二、引用类型作为方法参数")]),s._v(" "),t("p",[s._v("创建一个简单的 class PassByRef 如下。")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PassByRef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" ref "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对象引用")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("我们在上面的 class 中新增一个 refOriginal 方法进行字节码分析。")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("refOriginal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不改变方法参数的引用")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    字节码"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" aload_1 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将局部变量表槽位 1 压入栈顶（方法参数 o）")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" areturn "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将栈顶数据返回")]),s._v("\n      局部变量表"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Start")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Length")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Slot")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Name")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Signature")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LPassByRef")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 槽位 0，当前对象引用 this")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("     o   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Ljava")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("lang"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 槽位 1，方法的第一个 Object 参数 o")]),s._v("\n")])])]),t("p",[s._v("我们在上面的 class 中再新增一个 refUpdate 方法进行字节码分析。（重点理解: "),t("code",[s._v("7: astore_1")]),s._v("）")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("refUpdate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 改变方法参数的引用")]),s._v("\n        o "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" hashCode "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hashCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    字节码"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v("           #"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个 Object 对象引用并压入栈顶")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" dup              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 复制 Object 对象引用并压入栈顶")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" invokespecial #"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 Object 构造方法，使用一个引用")]),s._v("\n\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" astore_1         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为赋值操作 o = new Object() ，赋值的符号名称和方法参数都是 o ，")]),s._v("\n                             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 所以将新创建对象的引用放入槽位 1（相当于替换了方法参数的 o）")]),s._v("\n\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" aload_1          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 o 引用压入栈顶，准备调用 hashCode 方法")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" invokevirtual #"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用 hashCode 方法返回 int 值")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" istore_2         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 int 值放入局部变量表中，槽位为 2，名称为 hashCode ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" aload_1          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 o 引用压入栈顶，准备返回")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" areturn          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回 o 引用")]),s._v("\n      局部变量表"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Start")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Length")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Slot")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Name")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Signature")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LPassByRef")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 槽位 0，当前对象引用 this")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("     o   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Ljava")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("lang"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 槽位 1，方法的第一个 Object 参数 o")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hashCode   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("I")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 槽位 2，hashCode int 值")]),s._v("\n")])])]),t("h2",{attrs:{id:"三、基础数据类型作为方法参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、基础数据类型作为方法参数"}},[s._v("#")]),s._v(" 三、基础数据类型作为方法参数")]),s._v(" "),t("p",[s._v("创建一个简单的 class PassByValue 如下。")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PassByValue")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 基础数据")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("我们在上面的 class 中新增一个 intOriginal 方法进行字节码分析。")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("intOriginal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不改变方法参数基础数据的值")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    字节码"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" iload_1 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将局部变量表槽位 1 压入栈顶（方法 int 参数 o）")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ireturn "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将栈顶数据返回")]),s._v("\n      局部变量表"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Start")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Length")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Slot")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Name")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Signature")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LPassByValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// this")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("     o   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("I")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 槽位 1，方法的第一个 int 参数 o")]),s._v("\n")])])]),t("p",[s._v("我们在上面的 class 中再新增一个 intUpdate 方法进行字节码分析。（重点理解: "),t("code",[s._v("4: istore_1")]),s._v("）")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("intUpdate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 改变方法参数基础数据的值")]),s._v("\n        o "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" o "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    字节码"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" iload_1     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将局部变量表槽位 1 压入栈顶（方法 int 参数 o）")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" bipush  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 10 压入栈顶")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" iadd        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将栈顶的 2 个数出栈相加后压入栈顶")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" istore_1    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将相加的结果放入槽位 1（int 参数 o）")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" iload_1     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将槽位 1（int 参数 o）出栈，准备返回")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ireturn     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将栈顶数据返回")]),s._v("\n      局部变量表"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Start")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Length")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Slot")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Name")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Signature")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LPassByValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// this")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("     o   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("I")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 槽位 1，方法的第一个 int 参数 o")]),s._v("\n")])])]),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("通过字节码的分析我们明确了方法调用及方法参数在方法内部的作用过程。")]),s._v(" "),t("p",[t("strong",[s._v("最终是通过局部变量的槽位进行操作，重新赋值就覆盖槽位的数据。")])]),s._v(" "),t("p",[s._v("其中对字节码的分析可参考 "),t("a",{attrs:{href:"https://blog.csdn.net/xiaohulunb/article/details/103828570",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java JVM（JDK13）-专栏文章目录汇总 "),t("OutboundLink")],1),s._v("，\n比如为什么 new 指令后跟随着一个 dup 指令，如果创建对象后不赋值怎么处理（类似匿名类） ？")]),s._v(" "),t("h2",{attrs:{id:"专栏更多文章笔记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#专栏更多文章笔记"}},[s._v("#")]),s._v(" 专栏更多文章笔记")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://gourderwa.blog.csdn.net/article/details/104020339",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java 核心知识-专栏文章目录汇总"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/xiaohulunb/article/details/103594468",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java 并发编程-专栏文章目录汇总"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/xiaohulunb/article/details/103828570",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java JVM（JDK13）-专栏文章目录汇总"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);