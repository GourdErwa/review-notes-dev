(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{289:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("专栏原创出处："),a("a",{attrs:{href:"https://github.com/GourdErwa/review-notes/tree/master/language/java-puzzle",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-源笔记文件 "),a("OutboundLink")],1),t._v(" ，欢迎 Star，转载请附上原文出处链接和本声明。")])]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#使用前的配置"}},[t._v("使用前的配置")])]),a("li",[a("a",{attrs:{href:"#创建仓库"}},[t._v("创建仓库")])]),a("li",[a("a",{attrs:{href:"#分支"}},[t._v("分支")])]),a("li",[a("a",{attrs:{href:"#进行更改"}},[t._v("进行更改")])]),a("li",[a("a",{attrs:{href:"#重做提交"}},[t._v("重做提交")])]),a("li",[a("a",{attrs:{href:"#同步更改"}},[t._v("同步更改")])]),a("li",[a("a",{attrs:{href:"#术语表"}},[t._v("术语表")])]),a("li",[a("a",{attrs:{href:"#参考"}},[t._v("参考")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"使用前的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用前的配置"}},[t._v("#")]),t._v(" 使用前的配置")]),t._v(" "),a("p",[a("strong",[t._v("检查你的配置")])]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list --show-origin\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有的配置以及它们所在的文件")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有 Git 当时能找到的配置")]),t._v("\n")])])]),a("p",[a("strong",[t._v("全局配置")]),t._v("\n配置文件在"),a("code",[t._v("git config --list --show-origin")]),t._v(" 命令中可查看")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[name]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对你的 commit 操作设置关联的用户名")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[email address]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对你的 commit 操作设置关联的邮箱地址")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global color.ui auto\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启用有帮助的彩色命令行输出。")]),t._v("\n")])])]),a("p",[a("strong",[t._v("本地工程配置")]),t._v("\n配置文件在当前工程目录/.git/config 文件中")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local user.name xxx\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local user.email xxx@xxx.com\n")])])]),a("h2",{attrs:{id:"创建仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建仓库"}},[t._v("#")]),t._v(" 创建仓库")]),t._v(" "),a("p",[t._v("当着手于一个新的仓库时，你只需创建一次。要么在本地创建，然后推送到 GitHub；要么通过 clone 一个现有仓库。")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将现有目录转换为一个 Git 仓库")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Clone（下载）一个已存在于 GitHub 上的仓库，包括所有的文件、分支和提交 (commits)")]),t._v("\n")])])]),a("h2",{attrs:{id:"分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[t._v("#")]),t._v(" 分支")]),t._v(" "),a("p",[t._v("分支是使用 Git 工作的一个重要部分。你做的任何提交都会发生在当前“checked out”到的分支上。使用 git status 查看那是哪个分支。")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个新分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 说明：如果报错「fatal: 不是一个有效的对象名：'master'。」说明初始化仓库后还没有任何提交记录。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到指定分支并更新工作目录 (working directory)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将指定分支的历史合并到当前分支。这通常在拉取请求 (PR) 中完成，但也是一个重要的 Git 操作。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除指定分支")]),t._v("\n")])])]),a("h2",{attrs:{id:"进行更改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进行更改"}},[t._v("#")]),t._v(" 进行更改")]),t._v(" "),a("p",[t._v("浏览并检查项目文件的发展。")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出当前分支的版本历史")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --follow "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出文件的版本历史，包括重命名")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("first-branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("second-branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 展示两个分支之间的内容差异")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出指定 commit 的元数据和内容变化")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将文件进行快照处理用于版本控制")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[descriptive message]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将文件快照永久地记录在版本历史中")]),t._v("\n")])])]),a("h2",{attrs:{id:"重做提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重做提交"}},[t._v("#")]),t._v(" 重做提交")]),t._v(" "),a("p",[t._v("Erase mistakes and craft replacement history")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销所有 [commit] 后的的提交，在本地保存更改")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 放弃所有历史，改回指定提交")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小心！更改历史可能带来不良后果。如果你需要更改 GitHub（远端）已有的提交，请谨慎操作。如果你需要帮助，可访问 github.community 或联系支持 (support)。")])]),t._v(" "),a("h2",{attrs:{id:"同步更改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步更改"}},[t._v("#")]),t._v(" 同步更改")]),t._v(" "),a("p",[t._v("将你本地仓库与 GitHub.com 上的远端仓库同步")]),t._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载远端跟踪分支的所有历史")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将远端跟踪分支合并到当前本地分支")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将所有本地分支提交上传到 GitHub")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用来自 GitHub 的对应远端分支的所有新提交更新你当前的本地工作分支。git pull 是 git fetch 和 git merge 的结合。")]),t._v("\n")])])]),a("h2",{attrs:{id:"术语表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#术语表"}},[t._v("#")]),t._v(" 术语表")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("HEAD：代表你当前的工作目录。使用 git checkout 可移动 HEAD 指针到不同的分支、标记 (tags) 或提交")])]),t._v(" "),a("li",[a("p",[t._v(".gitignore 文件：\n有时一些文件最好不要用 Git 跟踪。这通常在名为 .gitignore 的特殊文件中完成。你可以在 "),a("a",{attrs:{href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("github.com/github/gitignore"),a("OutboundLink")],1),t._v(" 找到有用的 .gitignore 文件模板。")])])]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.github.com/training-kit/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Cheat Sheets"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);