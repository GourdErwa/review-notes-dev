(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{352:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("专栏原创出处："),e("a",{attrs:{href:"https://github.com/GourdErwa/review-notes/tree/master/language/scala-basis",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-源笔记文件 "),e("OutboundLink")],1),t._v(" ，"),e("a",{attrs:{href:"https://github.com/GourdErwa/scala-advanced/tree/master/scala-base/src/main/scala/com/gourd/scala/base/",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-源码 "),e("OutboundLink")],1),t._v("，欢迎 Star，转载请附上原文出处链接和本声明。")])]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#什么是自类型"}},[t._v("什么是自类型")])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"什么是自类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是自类型"}},[t._v("#")]),t._v(" 什么是自类型")]),t._v(" "),e("p",[t._v("自类型用于声明一个特质必须混入其他特质，该特质不需要直接实现其他特质，但是子类在实现该特质的时候必须混入被声明的特质。")]),t._v(" "),e("ul",[e("li",[t._v("在没有引入其他特质的时候，可以直接使用其他特质中定义好的方法。")]),t._v(" "),e("li",[t._v("自类型是一种细化 "),e("code",[t._v("this")]),t._v(" 或 "),e("code",[t._v("this 别名")]),t._v("(除关键字外的任何字符)的方法，为其重新赋予其他的类型。")]),t._v(" "),e("li",[t._v("在特质中使用自类型，定义一个"),e("code",[t._v("标识符")]),t._v(" + "),e("code",[t._v("要混入的特质")]),t._v(" + "),e("code",[t._v("=>")]),t._v("，例如 someIdentifier: SomeOtherTrait =>。")])]),t._v(" "),e("div",{staticClass:"language-scala extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scala"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" User "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" username"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" Tweeter "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新赋予 this 的类型，因此 username 可以在 tweet() 中使用，这里可以定义 this 为除关键字之外的任何字符。")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" User "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" tweet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tweetText"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" println"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$username: $tweetText"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为 VerifiedTweeter 继承了 Tweeter，而 Tweeter 又指定了自类型 User，所以 VerifiedTweeter 还需要混入 User")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" VerifiedTweeter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" username_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Tweeter "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" User "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" username "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"real $username_"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" tweeter "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" VerifiedTweeter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Beyoncé"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  tweeter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tweet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Just spilled my glass of lemonade"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// real Beyoncé: Just spilled my glass of lemonade")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);