(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{285:function(t,a,e){"use strict";e.r(a);var r=e(12),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#配置工具"}},[t._v("配置工具")])]),e("li",[e("a",{attrs:{href:"#创建仓库"}},[t._v("创建仓库")])]),e("li",[e("a",{attrs:{href:"#分支"}},[t._v("分支")])]),e("li",[e("a",{attrs:{href:"#进行更改"}},[t._v("进行更改")])]),e("li",[e("a",{attrs:{href:"#重做提交"}},[t._v("重做提交")])]),e("li",[e("a",{attrs:{href:"#同步更改"}},[t._v("同步更改")])]),e("li",[e("a",{attrs:{href:"#术语表"}},[t._v("术语表")])]),e("li",[e("a",{attrs:{href:"#参考"}},[t._v("参考")])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"配置工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置工具"}},[t._v("#")]),t._v(" 配置工具")]),t._v(" "),e("p",[t._v("对所有本地仓库的用户信息进行配置")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ git config --global user.name "[name]"\n对你的 commit 操作设置关联的用户名\n\n$ git config --global user.email "[email address]"\n对你的 commit 操作设置关联的邮箱地址\n\n$ git config --global color.ui auto\n启用有帮助的彩色命令行输出。\n')])])]),e("h2",{attrs:{id:"创建仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建仓库"}},[t._v("#")]),t._v(" 创建仓库")]),t._v(" "),e("p",[t._v("当着手于一个新的仓库时，你只需创建一次。要么在本地创建，然后推送到 GitHub；要么通过 clone 一个现有仓库。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git init\n将现有目录转换为一个 Git 仓库\n\n$ git clone [url]\nClone（下载）一个已存在于 GitHub 上的仓库，包括所有的文件、分支和提交 (commits)\n")])])]),e("h2",{attrs:{id:"分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[t._v("#")]),t._v(" 分支")]),t._v(" "),e("p",[t._v("分支是使用 Git 工作的一个重要部分。你做的任何提交都会发生在当前“checked out”到的分支上。使用 git status 查看那是哪个分支。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git branch [branch-name]\n创建一个新分支\n说明：如果报错「fatal: 不是一个有效的对象名：'master'。」说明初始化仓库后还没有任何提交记录。\n\n$ git checkout [branch-name]\n切换到指定分支并更新工作目录 (working directory)\n\n$ git merge [branch]\n将指定分支的历史合并到当前分支。这通常在拉取请求 (PR) 中完成，但也是一个重要的 Git 操作。\n\n$ git branch -d [branch-name]\n删除指定分支\n")])])]),e("h2",{attrs:{id:"进行更改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进行更改"}},[t._v("#")]),t._v(" 进行更改")]),t._v(" "),e("p",[t._v("浏览并检查项目文件的发展。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ git log\n列出当前分支的版本历史\n\n$ git log --follow [file]\n列出文件的版本历史，包括重命名\n\n$ git diff [first-branch]...[second-branch]\n展示两个分支之间的内容差异\n\n$ git show [commit]\n输出指定 commit 的元数据和内容变化\n\n$ git add [file]\n将文件进行快照处理用于版本控制\n\n$ git commit -m"[descriptive message]"\n将文件快照永久地记录在版本历史中\n')])])]),e("h2",{attrs:{id:"重做提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重做提交"}},[t._v("#")]),t._v(" 重做提交")]),t._v(" "),e("p",[t._v("Erase mistakes and craft replacement history")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git reset [commit]\n撤销所有 [commit] 后的的提交，在本地保存更改\n\n$ git reset --hard [commit]\n放弃所有历史，改回指定提交\n")])])]),e("blockquote",[e("p",[t._v("小心！更改历史可能带来不良后果。如果你需要更改 GitHub（远端）已有的提交，请谨慎操作。如果你需要帮助，可访问 github.community 或联系支持 (support)。")])]),t._v(" "),e("h2",{attrs:{id:"同步更改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同步更改"}},[t._v("#")]),t._v(" 同步更改")]),t._v(" "),e("p",[t._v("将你本地仓库与 GitHub.com 上的远端仓库同步")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ git fetch\n下载远端跟踪分支的所有历史\n\n$ git merge\n将远端跟踪分支合并到当前本地分支\n\n$ git push\n将所有本地分支提交上传到 GitHub\n\n$ git pull\n使用来自 GitHub 的对应远端分支的所有新提交更新你当前的本地工作分支。git pull 是 git fetch 和 git merge 的结合。\n")])])]),e("h2",{attrs:{id:"术语表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#术语表"}},[t._v("#")]),t._v(" 术语表")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("HEAD：代表你当前的工作目录。使用 git checkout 可移动 HEAD 指针到不同的分支、标记 (tags) 或提交")])]),t._v(" "),e("li",[e("p",[t._v(".gitignore 文件：\n有时一些文件最好不要用 Git 跟踪。这通常在名为 .gitignore 的特殊文件中完成。你可以在 "),e("a",{attrs:{href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("github.com/github/gitignore"),e("OutboundLink")],1),t._v(" 找到有用的 .gitignore 文件模板。")])])]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.github.com/training-kit/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Cheat Sheets"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);