(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{292:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("专栏原创出处："),s("a",{attrs:{href:"https://github.com/GourdErwa/review-notes/tree/master/language/java-concurrency",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-源笔记文件 "),s("OutboundLink")],1),t._v(" ，"),s("a",{attrs:{href:"https://github.com/GourdErwa/java-advanced/tree/master/java-concurrency",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-源码 "),s("OutboundLink")],1),t._v("，欢迎 Star，转载请附上原文出处链接和本声明。")])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#重入锁-reentrantlock"}},[t._v("重入锁-ReentrantLock")])]),s("li",[s("a",{attrs:{href:"#公平和非公平选择"}},[t._v("公平和非公平选择")])]),s("li",[s("a",{attrs:{href:"#重入机制需要解决的问题"}},[t._v("重入机制需要解决的问题")])]),s("li",[s("a",{attrs:{href:"#如何使用？"}},[t._v("如何使用？")])]),s("li",[s("a",{attrs:{href:"#实现机制分析"}},[t._v("实现机制分析")])]),s("li",[s("a",{attrs:{href:"#优缺点"}},[t._v("优缺点")])]),s("li",[s("a",{attrs:{href:"#使用场景"}},[t._v("使用场景")])]),s("li",[s("a",{attrs:{href:"#总结"}},[t._v("总结")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"重入锁-reentrantlock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重入锁-reentrantlock"}},[t._v("#")]),t._v(" 重入锁-ReentrantLock")]),t._v(" "),s("p",[t._v("重入锁 ReentrantLock，就是支持重进入的锁，它表示该锁能够支持一个线程对资源的重复加锁。除此之外，该锁的还支持获取锁时的公平和非公平性选择。")]),t._v(" "),s("p",[t._v("ReentrantLock 虽然没能像 synchronized 关键字一样"),s("em",[t._v("支持隐式的重进入")]),t._v("，但是在调用 lock 方法时，已经获取到锁的线程，能够再次调用 lock 方法获取锁而不被阻塞。")]),t._v(" "),s("h2",{attrs:{id:"公平和非公平选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公平和非公平选择"}},[t._v("#")]),t._v(" 公平和非公平选择")]),t._v(" "),s("p",[t._v("这里提到一个锁获取的公平性问题，如果在绝对时间上，先对锁进行获取的请求一定先被满足，那么这个锁是公平的，反之，是不公平的。")]),t._v(" "),s("p",[t._v("公平的获取锁，也就是等待时间最长的线程最优先获取锁，也可以说锁获取是顺序的。\nReentrantLock 提供了一个构造函数，能够控制锁是否是公平的。")]),t._v(" "),s("h2",{attrs:{id:"重入机制需要解决的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重入机制需要解决的问题"}},[t._v("#")]),t._v(" 重入机制需要解决的问题")]),t._v(" "),s("p",[t._v("重进入是指任意线程在获取到锁之后能够再次获取该锁而不会被锁所阻塞，该特性的实现需要解决以下两个问题：")]),t._v(" "),s("ol",[s("li",[t._v("线程再次获取锁。锁需要去识别获取锁的线程是否为当前占据锁的线程，如果是，则再次成功获取。")]),t._v(" "),s("li",[t._v("锁的最终释放。线程重复 n 次获取了锁，随后在第 n 次释放该锁后，其他线程能够获取到该锁。")])]),t._v(" "),s("p",[t._v("在代码层面，锁的最终释放要求锁：")]),t._v(" "),s("ul",[s("li",[t._v("锁被获取是，计数自增，计数表示当前锁被重复获取的次数；")]),t._v(" "),s("li",[t._v("锁被释放时，计数自减，当计数等于 0 时表示锁已经成功释放。")])]),t._v(" "),s("h2",{attrs:{id:"如何使用？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用？"}},[t._v("#")]),t._v(" 如何使用？")]),t._v(" "),s("p",[t._v("以下代码演示一个非公平锁对 value 的并发操作")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Slf4j")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLockExample")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),t._v(" lock "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取锁")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//value++;")]),t._v("\n            lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再次获取锁(重入)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前线程持有锁数 = {}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHoldCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 释放锁")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再次释放锁")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"实现机制分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现机制分析"}},[t._v("#")]),t._v(" 实现机制分析")]),t._v(" "),s("p",[t._v("因为 ReentrantLock 支持公平与非公平选择，内部实现机制为：")]),t._v(" "),s("ul",[s("li",[t._v("内部基于 AbstractQueuedSynchronizer（AQS）实现一个公平与非公平公共的父类 Sync ，用于管理同步状态")]),t._v(" "),s("li",[t._v("FairSync 继承 Sync 用于处理公平问题")]),t._v(" "),s("li",[t._v("NonfairSync 继承 Sync 用于处理非公平问题")])]),t._v(" "),s("p",[t._v("具体代码相关分析参考《锁的内存语义》一节内容，此处不做重复分析，在了解了 AQS 原理的基础上更容易分析该锁的执行机制。")]),t._v(" "),s("p",[t._v("公平和非公平实现主要的区别在于公平锁加锁时调用 hasQueuedPredecessors 方法取出等待队列的前驱节点。")]),t._v(" "),s("h2",{attrs:{id:"优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),s("p",[t._v("事实上，公平的锁机制往往没有非公平的效率高，但是，并不是任何场景都是以 TPS 作为唯一的指标。")]),t._v(" "),s("ul",[s("li",[t._v("公平锁能够减少“饥饿”发生的概率，等待越久的请求越是能够得到优先满足。")]),t._v(" "),s("li",[t._v("非公平性锁虽然可能造成线程“饥饿”，但极少的线程切换，保证了其更大的吞吐量。")])]),t._v(" "),s("h2",{attrs:{id:"使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),s("blockquote",[s("p",[t._v("如果在 synchronized 关键字不能满足的需求上我们考虑使用 Lock，相关比较参考或者回忆文章《并发同步、锁定机制比较》内容")])]),t._v(" "),s("p",[t._v("此处直接简要对比 synchronized 、ReentrantLock 即可分析使用场景。")]),t._v(" "),s("p",[t._v("实际代码逻辑中是否需要中断、状态感知、锁独特的功能判断。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("锁中断操作")]),t._v(" "),s("ul",[s("li",[t._v("synchronized：不支持中断操作")]),t._v(" "),s("li",[t._v("ReentrantLock：支持中断，支持超时中断")])])]),t._v(" "),s("li",[s("p",[t._v("锁功能性")]),t._v(" "),s("ul",[s("li",[t._v("synchronized：独占锁、可重入锁")]),t._v(" "),s("li",[t._v("ReentrantLock：可重入锁、公平非公平选择 ...")])])]),t._v(" "),s("li",[s("p",[t._v("锁状态感知")]),t._v(" "),s("ul",[s("li",[t._v("synchronized：无法判断是否拿到锁")]),t._v(" "),s("li",[t._v("ReentrantLock：可以判断是否拿到锁")])])])]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("什么时候考虑使用 ReentrantLock？需要使用锁的重入机制时")])])])}),[],!1,null,null,null);a.default=e.exports}}]);